
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Company {
  id          Int     @id @default(autoincrement())
  name        String
  tagline     String?
  url         String?

  phone       String?
  email       String?
  address     String?
  city        String?
  region      String?
  postalCode  String?
  country     String?
  logoUrl     String?

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  listings    CompanyServiceCity[] // opt-ins per service+city
}

model Service {
  id           Int       @id @default(autoincrement())
  name         String    @unique   // e.g., "Plumbing", "Electrical"
  slug         String    @unique

  heroImage    String?
  order        Int       @default(0)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  serviceCities ServiceCity[]  // all cities where this service is shown
}

model City {
  id            Int     @id @default(autoincrement())
  name          String
  slug          String   @unique    // e.g., "calgary"
  regionCode    String?     // e.g., "AB"
  regionSlug    String? @db.VarChar(10) // "ab"
  country       String  @default("Canada")

  serviceCities ServiceCity[]

  @@unique([name, regionCode, country], map: "city_name_region_country")
  @@unique([regionSlug, slug])       // guarantees unique pair for routing
  @@index([regionCode, country])
  @@index([name])
}

model ServiceCity {
  id         Int     @id @default(autoincrement())
  serviceId  Int
  cityId     Int

  service    Service @relation(fields: [serviceId], references: [id], onDelete: Cascade)
  city       City    @relation(fields: [cityId], references: [id], onDelete: Cascade)

  listings   CompanyServiceCity[] // companies opted into this service+city

  @@unique([serviceId, cityId])   // one slot per (service, city)
  @@index([cityId])
  @@index([serviceId])
}

model CompanyServiceCity {
  companyId     Int
  serviceCityId Int

  // Useful listing metadata (optional):
  displayName   String?      // override company name per city/service
  isFeatured    Boolean  @default(false)
  priceTier     String?      // "basic", "pro", etc.
  approvedAt    DateTime?
  createdAt     DateTime  @default(now())

  company       Company     @relation(fields: [companyId], references: [id], onDelete: Cascade)
  serviceCity   ServiceCity @relation(fields: [serviceCityId], references: [id], onDelete: Cascade)

  @@id([companyId, serviceCityId])
  @@index([serviceCityId])
}

model Testimonial {
  id          Int      @id @default(autoincrement())
  name        String
  role        String?
  quote       String
  company     String?
  avatarUrl   String?
  createdAt   DateTime  @default(now())
  published   Boolean   @default(true)
}

model BlogPost {
  id          Int      @id @default(autoincrement())
  slug        String   @unique
  title       String
  excerpt     String?
  content     String?
  coverImage  String?
  published   Boolean   @default(true)
  publishedAt DateTime? 
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
